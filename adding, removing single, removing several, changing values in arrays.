package com.interviews;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

public class MyArrays {
	public static void main(String[] args) {

//		List<Integer> l = new ArrayList<Integer>(Arrays.asList(changeSingleValue(4, 100, new Integer[] { 1, 2, 3, 4, 5 })));
//		l.forEach(v -> System.out.print(v + " "));

//		List<Integer> l = new ArrayList<Integer>(Arrays.asList(removeSingleValue(4, new Integer[] { 1, 2, 3, 4, 5 })));
//		l.forEach(v -> System.out.print(v + " "));

//		List<Integer> l = new ArrayList<Integer>(
//				Arrays.asList(removeSeveralValues(new Integer[] { 1, 3, 4, 5, 10 }, 3, 5, 10)));
//		l.forEach(v -> System.out.print(v + " "));
	}

	public static Integer[] removeSeveralValues(Integer[] originalArray, Integer... valuesToRemove) {
		List<Integer> oreginalList = new ArrayList<Integer>(Arrays.asList(originalArray));
		List<Integer> listToRemove = new ArrayList<Integer>(Arrays.asList(valuesToRemove));
		oreginalList.removeAll(listToRemove);
		Integer[] arrayToReturn = new Integer[oreginalList.size()];
		for (int i = 0; i < oreginalList.size(); i++) {
			arrayToReturn[i] = oreginalList.get(i);
		}
		return arrayToReturn;
	}

	public static Integer[] changeSingleValue(int oldValue, int newValue, Integer... array) {
		for (int i = 0; i < array.length; i++) {
			if (array[i] == oldValue) {
				array[i] = newValue;
			}
		}
		return array;
	}

	public static Integer[] removeSingleValue(int valueToRemove, Integer... array) {
		int count = 0;
		List<Integer> listToRemove = new ArrayList<Integer>();
		for (int i = 0; i < array.length; i++) {
			if (array[i] == valueToRemove) {
				count++;
			}
		}
		for (int i = 0; i < array.length - count; i++) {
			if (array[i] != valueToRemove) {
				listToRemove.add(array[i]);
			}
		}

		Integer[] arrayToReturn = new Integer[listToRemove.size()];
		for (int i = 0; i < arrayToReturn.length; i++) {
			arrayToReturn[i] = listToRemove.get(i);
		}
		return arrayToReturn;
	}
}
